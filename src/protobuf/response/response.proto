syntax = "proto3";

package response;

// 마을
//캐릭터 생성
message S_Enter {
  PlayerInfo player = 1;
}

//다른 유저 캐릭터 생성
message S_Spawn {
  repeated PlayerInfo players = 1;
}

//다른 유저 위치 정보 전달
message S_Move {
  int32 playerId = 1;
  TransformInfo transform = 2;
}

//마을 애니메이션 모션 패킷 전달
message S_Animation {
  int32 playerId = 1;
  int32 animCode = 2;
}

//채팅
message S_Chat{
  int32 playerId = 1;
  string chatMsg = 2;
}

//던전 이동
message S_EnterDungeon{
  DungeonInfo dungeonInfo = 1;
  PlayerStatus player = 2;
  ScreenText screenText = 3; // Option
  BattleLog battleLog = 4;
}

//마을 나가기
message S_Despawn {
  repeated int32 playerIds = 1;
}

// 회원가입
message S_Register{
  bool success = 1;
  string message = 2;
}

// 로그인
message S_LogIn{
  bool success = 1;
  string message = 2;
}


// 던전
// 던전 나가기
message S_LeaveDungeon { }

// 스크린 텍스트 내용 전송
message S_ScreenText{
  ScreenText screenText = 1;
}

// 스크린 텍스트 완료
message S_ScreenDone { }

// 전투 로그 전송
message S_BattleLog {
  BattleLog battleLog = 1;
}

// 플레이어의 체력
message S_SetPlayerHp {
  float hp = 1;
}

// 플레이어의 마나
message S_SetPlayerMp {
  float mp = 1;
}

// 몬스터의 체력
message S_SetMonsterHp {
  int32 monsterIdx = 1;
  float hp = 2;
}

// 플레이어의 애니메이션 동작
message S_PlayerAction {
  int32 targetMonsterIdx = 1;
  ActionSet actionSet = 2;
}

// 몬스터의 애니메이션 동작
message S_MonsterAction {
  int32 actionMonsterIdx = 1;
  ActionSet actionSet = 2;
}

message S_EnterHatchery{
  PlayerInfo player = 1;
  TransformInfo bossTransformInfo = 2;
  float bossMaxHp = 3;
  float bossSpeed = 4;
  string bossName = 5;
}

message S_SpawnPlayerHatchery{
  repeated PlayerInfo players = 1;
}

message S_MoveAtHatchery{
  int32 playerId = 1;
  TransformInfo transform = 2;
}

message S_SetHatcheryBossHp{
  int32 bossCurHp = 1;
}

message S_TryAttack{
  int32 playerId = 1;
  optional float rotX = 2;
  optional float rotY = 3;
  optional float rotZ = 4;
}

message S_BossMove{
  TransformInfo bossTransform = 1;
  UnitVector bossUnitVector = 2;
}

// ==============타운 패킷===================
message S_BuyItem{
  ItemInfo item = 1;  // 구매한 후 구매한 아이템 id, quantity
  int32 gold = 2;      // 남은 금액
}

message S_SellItem{
  ItemInfo item = 1;  // 구매한 후 구매한 아이템 id, quantity
  int32 gold = 2;      // 남은 금액
}

message S_EquipWeapon{
 int32 itemId = 1;   // 장착한 아이템 id
}

message S_UnequipWeapon{
 string itemType = 1;  // 탈착한 아이템 id
}

message S_UseItem{
  ItemInfo item = 1;  // 사용한 후 남은 아이템 id, quantity
}
// 퀘스트 수락
message S_AcceptQuest {
  QuestInfo quest = 1;
  bool success = 2;
  string message = 3;
}

// 퀘스트 업데이트
message S_UpdateQuest {
  QuestInfo quest = 1;
  bool success = 2;
  string message = 3;
}

// 퀘스트 완료
message S_CompleteQuest {
  int32 questId = 1;
  bool success = 2;
  string message = 3;
  QuestInfo quest = 4;
}

// 퀘스트 목록 응답
message S_GetQuests {
  repeated QuestInfo quests = 1;
}
// 퀘스트 시작 메시지 추가
message S_EnterQuest {
  QuestInfo quest = 1;
  string message = 2;
}
message S_BossTryAttack{
}

message S_SetPlayerHpMpHatchery{
  int32 playerId = 1;
  optional float playerCurHp = 2;
  optional float playerCurMp = 3;
}

message S_DespawnHatchery{
	int32 playerId = 1;
}

message S_TryUsePotion {
  int32 itemId = 1;
  int32 quantity = 2;
}

message S_KillBoss {
  int32 playerId = 1;
  repeated string btnTexts = 2;
  string message = 3;
}

message S_HatcheryConfirmReward {
  int32 selectedBtn = 1;
  repeated string btnTexts = 2;
  string message = 3;
}